Topic,Difficulty,Question,Answer
Collections,Easy,What is the Collections framework in Java?,The Collections framework in Java provides interfaces and classes for working with groups of objects.
Collections,Easy,What is the hierarchy of Collection interfaces in Java?,"The hierarchy of Collection interfaces in Java includes Collection, List, Set, Queue, and Map."
Collections,Easy,What is an Iterator in Java Collections?,An Iterator in Java Collections allows iterating over elements in a collection.
Collections,Easy,What is a List in Java Collections?,A List in Java Collections is an ordered collection that allows duplicate elements.
Collections,Easy,What is a Set in Java Collections?,A Set in Java Collections is a collection that does not allow duplicate elements.
Collections,Easy,What is a Map in Java Collections?,"A Map in Java Collections is a collection of key-value pairs, where each key is unique."
Collections,Easy,What is a Queue in Java Collections?,A Queue in Java Collections is a collection that orders elements for processing.
Collections,Easy,What is a Deque in Java Collections?,A Deque in Java Collections is a double-ended queue that allows insertion and removal of elements from both ends.
Collections,Easy,What is a Stack in Java Collections?,A Stack in Java Collections is a collection that follows the Last-In-First-Out (LIFO) principle.
Collections,Easy,What is a Enumeration in Java Collections?,An Enumeration in Java Collections is an interface that allows iterating legacy collections and obtaining elements sequentially.
Collections,Easy,What is the difference between Collection and Collections in Java?,"Collection is an interface representing a group of objects, while Collections is a utility class providing various methods for collections."
Collections,Easy,What is the difference between Arrays and Collections in Java?,"Arrays are fixed-size structures storing elements of the same type, while Collections are dynamic and can hold elements of different types."
Collections,Easy,What is the difference between Iterator and ListIterator in Java Collections?,"Iterator allows sequential access to elements in a collection, while ListIterator is a bidirectional iterator specific to lists."
Collections,Easy,What is the difference between HashSet and TreeSet in Java?,"HashSet does not maintain any order of elements, while TreeSet orders elements in ascending order or according to a specified Comparator."
Collections,Easy,What is the difference between ArrayList and Vector in Java?,"ArrayList is not synchronized and is not thread-safe, while Vector is synchronized and is thread-safe."
Collections,Easy,What is the difference between Enumeration and Iterator in Java Collections?,"Enumeration is a legacy interface that allows sequential access to elements, while Iterator supports additional operations like removal."
Collections,Easy,What is the difference between List and Map in Java Collections?,"List is an ordered collection allowing duplicate elements, while Map is a collection of key-value pairs with unique keys."
Collections,Easy,What is the difference between LinkedList and ArrayList in Java?,"LinkedList uses a doubly-linked list for internal storage and provides efficient insertion and removal, while ArrayList uses an array and provides fast element access."
Collections,Easy,What is the difference between List and Set in Java Collections?,"List is an ordered collection allowing duplicate elements and maintaining insertion order, while Set is an unordered collection that does not allow duplicates."
Collections,Easy,What is the difference between Map and Hashtable in Java?,"Hashtable is synchronized and does not allow null keys or values, while Map is not synchronized and allows null values and keys."
Collections,Easy,What is the difference between Map and List in Java Collections?,"Map is a collection of key-value pairs, while List is an ordered collection of elements."
Collections,Easy,What is the difference between Map and Set in Java Collections?,"Map is a collection of key-value pairs, while Set is a collection of unique elements."
Collections,Easy,What is the difference between SortedMap and NavigableMap in Java?,"NavigableMap is an extension of SortedMap that provides navigation methods, such as finding the closest key to a given key."
Collections,Medium,What is the difference between Set and List in Java?,"Set is an unordered collection that does not allow duplicate elements, while List is an ordered collection that allows duplicate elements."
Collections,Medium,What is the difference between HashMap and Hashtable in Java?,"HashMap is not synchronized and allows null keys and values, while Hashtable is synchronized and does not allow null keys or values."
Collections,Medium,What is a ConcurrentHashMap in Java?,"ConcurrentHashMap is a thread-safe implementation of the Map interface that allows concurrent updates from multiple threads without blocking, providing better performance in concurrent environments."
Collections,Medium,What is a LinkedHashMap in Java?,"LinkedHashMap is a Map implementation that maintains the insertion order of elements, in addition to providing key-value mappings."
Collections,Medium,What is a TreeMap in Java?,TreeMap is a Map implementation that stores elements in a sorted order based on the natural ordering of keys or a custom Comparator.
Collections,Medium,What is a WeakHashMap in Java?,"WeakHashMap is a Map implementation where keys are weakly referenced, allowing them to be garbage-collected if no strong references exist, making it useful for memory-sensitive caching scenarios."
Collections,Medium,What is a LinkedHashSet in Java?,"LinkedHashSet is a Set implementation that maintains the insertion order of elements, in addition to not allowing duplicate values."
Collections,Medium,What is a ConcurrentSkipListMap in Java?,"ConcurrentSkipListMap is a concurrent and sorted Map implementation that uses skip lists for efficient search, insertion, and removal operations, allowing multiple threads to access the map concurrently."
Collections,Medium,What is an EnumMap in Java?,"EnumMap is a specialized Map implementation that uses an enum type as the key, providing high-performance and type-safe operations specifically designed for enum keys."
Collections,Medium,What is an EnumSet in Java?,"EnumSet is a specialized Set implementation that is designed to work with enum types, providing memory-efficient and high-performance operations specific to enums."
Collections,Medium,What is a BitSet in Java?,"BitSet is a class that represents a collection of bits, allowing various bitwise operations to be performed on them."
Collections,Medium,What is a CopyOnWriteArrayList in Java?,"CopyOnWriteArrayList is a thread-safe implementation of List where all mutative operations (add, set, remove, etc.) are implemented by making a fresh copy of the underlying array, providing thread-safety without the need for explicit locking."
Collections,Medium,What is a CopyOnWriteArraySet in Java?,"CopyOnWriteArraySet is a thread-safe implementation of Set that is backed by a CopyOnWriteArrayList, providing thread-safe set operations without the need for explicit locking."
Collections,Medium,What is a SynchronizedList in Java?,"SynchronizedList is a wrapper class that synchronizes access to an underlying List, making it thread-safe."
Collections,Medium,What is a SynchronizedSet in Java?,"SynchronizedSet is a wrapper class that synchronizes access to an underlying Set, making it thread-safe."
Collections,Medium,What is a SynchronizedMap in Java?,"SynchronizedMap is a wrapper class that synchronizes access to an underlying Map, making it thread-safe."
Collections,Medium,What is a SynchronizedSortedMap in Java?,"SynchronizedSortedMap is a wrapper class that synchronizes access to an underlying SortedMap, making it thread-safe."
Collections,Medium,What is a SynchronizedSortedSet in Java?,"SynchronizedSortedSet is a wrapper class that synchronizes access to an underlying SortedSet, making it thread-safe."
Collections,Medium,What is an UnmodifiableList in Java?,"UnmodifiableList is a wrapper class that creates an unmodifiable view of an underlying List, preventing any modifications to the list."
Collections,Medium,What is an UnmodifiableSet in Java?,"UnmodifiableSet is a wrapper class that creates an unmodifiable view of an underlying Set, preventing any modifications to the set."
Collections,Medium,What is an UnmodifiableMap in Java?,"UnmodifiableMap is a wrapper class that creates an unmodifiable view of an underlying Map, preventing any modifications to the map."
Collections,Medium,What is an UnmodifiableSortedMap in Java?,"UnmodifiableSortedMap is a wrapper class that creates an unmodifiable view of an underlying SortedMap, preventing any modifications to the sorted map."
Collections,Medium,What is an UnmodifiableSortedSet in Java?,"UnmodifiableSortedSet is a wrapper class that creates an unmodifiable view of an underlying SortedSet, preventing any modifications to the sorted set."
Collections,Hard,What is a weak reference in Java collections?,"A weak reference is a reference type in Java that allows an object to be garbage-collected if there are no strong references to it, but it can still be accessed if there are weak references to it. It is often used in cache implementations or scenarios where memory-sensitive behavior is desired."
Collections,Hard,What is the difference between ArrayList and LinkedList in Java?,"ArrayList is implemented as a resizable array, providing fast random access and efficient element retrieval, while LinkedList is implemented as a doubly-linked list, providing fast insertion and deletion at both ends but slower random access."
Collections,Hard,What is the difference between TreeSet and HashSet in Java?,"TreeSet is an implementation of Set that stores elements in a sorted order, while HashSet is an implementation of Set that does not guarantee any specific order."
Collections,Hard,What is the difference between HashMap and TreeMap in Java?,"HashMap is an implementation of Map that does not guarantee any specific order of elements, while TreeMap is an implementation of Map that stores elements in a sorted order based on the natural ordering of keys or a custom Comparator."
Collections,Hard,What is the difference between ConcurrentHashMap and Hashtable?,"ConcurrentHashMap is a thread-safe implementation of Map that allows concurrent updates from multiple threads without blocking, while Hashtable is a synchronized implementation of Map that provides thread-safe operations but can lead to performance bottlenecks in highly concurrent scenarios."
Collections,Hard,What is a BlockingQueue in Java Collections?,"A BlockingQueue is a Queue implementation that supports blocking operations when the queue is empty (for taking elements) or full (for adding elements), allowing threads to wait until the required conditions are met."
Collections,Hard,What is a ConcurrentLinkedQueue in Java Collections?,"ConcurrentLinkedQueue is a thread-safe implementation of Queue that provides high concurrency for both adding and removing elements, making it suitable for multi-threaded environments."
Collections,Hard,What is a priority queue in Java Collections?,"A priority queue is a Queue implementation where elements are ordered based on their priority, which is determined either by their natural ordering or a custom Comparator. Elements with higher priority are dequeued first."
Collections,Hard,What is a NavigableMap in Java Collections?,"NavigableMap is a subinterface of SortedMap that provides navigation methods, such as finding the closest key to a given key or retrieving a subset of entries based on a range of keys."
Collections,Hard,What is a NavigableSet in Java Collections?,"NavigableSet is a subinterface of SortedSet that provides navigation methods, such as finding the closest element to a given element or retrieving a subset of elements based on a range of values."
Collections,Hard,What is a Spliterator in Java Collections?,"Spliterator is an interface introduced in Java 8 that allows efficient traversal and splitting of elements in a collection, enabling parallel processing of data. It provides methods for iterating, splitting, and estimating the size of the elements."
Collections,Hard,What is a Spliterators in Java Collections?,Spliterators is a utility class in Java that provides various static methods for creating spliterators for different types of collections. It offers convenient methods for creating spliterators based on collection characteristics and specific requirements.
Collections,Hard,What is a Comparator in Java Collections?,"Comparator is a functional interface in Java that is used for comparing objects of a specific type. It provides methods for defining custom comparison logic, enabling sorting and ordering of elements in collections."
Collections,Hard,What is Comparator.comparing in Java Collections?,"Comparator.comparing is a static method in Java that allows creating a Comparator based on a particular key extraction function. It simplifies the process of comparing objects based on specific attributes or properties, making it easier to define custom sorting behavior."
Collections,Hard,What is a Stream in Java Collections?,"Stream is a new abstract layer introduced in Java 8 that allows processing collections of data in a functional and declarative manner. It provides a set of powerful operations for filtering, mapping, reducing, and manipulating data, enabling concise and expressive code."
Collections,Hard,What is a Stream API in Java Collections?,Stream API is a set of classes and interfaces introduced in Java 8 that provides a powerful way to process collections of data using functional programming techniques. It offers a fluent and expressive API for performing operations on streams of elements.
Collections,Hard,What is a ParallelStream in Java Collections?,"ParallelStream is a parallel variant of Stream introduced in Java 8 that allows processing elements concurrently using multiple threads. It provides automatic parallelization of operations, which can result in improved performance for computationally intensive tasks."
Collections,Hard,What is a Stream.reduce in Java Collections?,"Stream.reduce is a terminal operation in the Stream API that combines the elements of a stream into a single result by applying a binary operator. It can be used to perform calculations, aggregations, or transformations on the elements of a stream."
Collections,Hard,What is a Stream.collect in Java Collections?,"Stream.collect is a terminal operation in the Stream API that accumulates the elements of a stream into a collection or a single value. It provides flexibility to perform custom operations for collecting elements, such as grouping, partitioning, or performing complex aggregations."
Collections,Hard,What is a Stream.flatMap in Java Collections?,Stream.flatMap is an intermediate operation in the Stream API that applies a mapping function to each element of a stream and flattens the result. It is useful for converting a stream of elements to a stream of another type or for flattening nested collections.
Collections,Hard,What is a Stream.filter in Java Collections?,Stream.filter is an intermediate operation in the Stream API that selects elements from a stream based on a specified predicate. It allows filtering out unwanted elements and creating a new stream containing only the elements that satisfy the given condition.
Collections,Hard,What is a Stream.sorted in Java Collections?,"Stream.sorted is an intermediate operation in the Stream API that sorts the elements of a stream based on their natural ordering or a custom Comparator. It produces a new stream with the sorted elements, allowing further operations to be performed on the sorted data."
Collections,Hard,What is a Stream.map in Java Collections?,"Stream.map is an intermediate operation in the Stream API that applies a mapping function to each element of a stream, transforming the elements into a new type or modifying their values. It produces a new stream with the mapped elements for further processing."
