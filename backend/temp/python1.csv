Topic,Difficulty,Question,Answer
Data Types,Easy,What are the basic data types in Python?,"The basic data types in Python include integers, floats, strings, booleans, and None."
Data Types,Easy,How do you convert a string to an integer in Python?,"Use the int() function: num = int(""123"")"
Data Types,Medium,What is the difference between a list and a tuple in Python?,A list is mutable (can be changed) while a tuple is immutable (cannot be changed).
Data Types,Medium,What is the difference between = and == in Python?,"= is used to assign a value to a variable, while == is used to compare two values for equality."
Data Types,Hard,What is the difference between deep copy and shallow copy in Python?,"A deep copy creates a new object with a new memory address, while a shallow copy creates a new object that references the original data."
Control Flow,Easy,What is the syntax for an if statement in Python?,if condition:
Control Flow,Easy,What is the syntax for a for loop in Python?,for variable in iterable:
Control Flow,Medium,What is the difference between a while loop and a for loop in Python?,"A while loop is used when the number of iterations is not known in advance, while a for loop is used when the number of iterations is known in advance."
Control Flow,Medium,What is the difference between break and continue in Python?,"break terminates the loop immediately, while continue skips the current iteration and continues with the next iteration."
Control Flow,Hard,What is a generator function in Python?,"A generator function is a function that uses the yield keyword to return a generator object, which can be iterated over to produce a sequence of values without creating a list."
Functions,Easy,What is the syntax for defining a function in Python?,"def function_name(parameter1, parameter2):"
Functions,Easy,How do you call a function in Python?,"function_name(argument1, argument2)"
Functions,Medium,What is a lambda function in Python?,"A lambda function is an anonymous function that can be defined in a single line of code. It is useful for creating small, one-time use functions."
Functions,Medium,What is the difference between return and print in Python?,"return is used to return a value from a function, while print is used to display a value on the screen."
Functions,Hard,What is a closure in Python?,A closure is a function object that remembers values in the enclosing lexical scope even if they are not present in memory.
Classes,Easy,What is the syntax for defining a class in Python?,class ClassName:
Classes,Easy,How do you create an instance of a class in Python?,instance = ClassName()
Strings,Easy,How do you concatenate two strings in Python?,Use the + operator: string1 + string2
Strings,Easy,How do you get the length of a string in Python?,Use the len() function: len(string)
Strings,Medium,"What is the difference between strip(), lstrip(), and rstrip() in Python?","strip() removes whitespace from both ends of a string, lstrip() removes whitespace from the beginning of a string, and rstrip() removes whitespace from the end of a string."
Strings,Medium,How do you replace a substring in a string in Python?,"Use the replace() method: string.replace(old, new)"
Strings,Hard,What is a regular expression in Python?,"A regular expression is a sequence of characters that forms a search pattern. It can be used to search, replace, and validate text based on certain patterns."
Lists,Easy,How do you add an element to the end of a list in Python?,Use the append() method: list.append(element)
Lists,Easy,How do you remove an element from a list in Python?,Use the remove() method: list.remove(element)
Lists,Medium,What is the difference between append() and extend() in Python?,"append() adds an element to the end of a list, while extend() adds multiple elements to the end of a list."
Lists,Medium,How do you sort a list in Python?,Use the sort() method: list.sort()
Lists,Hard,How do you create a list comprehension in Python?,Use the syntax: [expression for item in iterable if condition]
Dictionaries,Easy,How do you access a value in a dictionary in Python?,Use square brackets: dictionary[key]
Dictionaries,Easy,How do you add a key-value pair to a dictionary in Python?,Use square brackets: dictionary[key] = value
Dictionaries,Medium,What is the difference between a dictionary and a set in Python?,"A dictionary is a collection of key-value pairs, while a set is a collection of unique elements."
Dictionaries,Medium,How do you check if a key is in a dictionary in Python?,Use the in keyword: key in dictionary
Dictionaries,Hard,How do you create a dictionary comprehension in Python?,Use the syntax: {key_expression: value_expression for item in iterable if condition}
File Handling,Easy,How do you open a file in Python?,"Use the open() function: file = open(filename, mode)"
File Handling,Easy,How do you close a file in Python?,Use the close() method: file.close()
File Handling,Medium,How do you read a file line by line in Python?,Use a for loop: for line in file: print(line)
Functions,Easy,How do you define a function in Python?,Use the def keyword: def function_name(arguments):
Functions,Easy,How do you call a function in Python?,Use the function name followed by parentheses and any necessary arguments: function_name(arguments)
Functions,Medium,What is the difference between return and print in a function in Python?,"return returns a value from a function and ends the function, while print outputs a value to the console but does not end the function."
Functions,Medium,How do you pass a variable number of arguments to a function in Python?,Use the *args syntax to pass a variable number of non-keyword arguments or **kwargs syntax to pass a variable number of keyword arguments.
Functions,Hard,What is a lambda function in Python?,"A lambda function is a small, anonymous function that can have any number of arguments but only one expression. It is defined using the lambda keyword and is often used as an argument to higher-order functions."
Object-Oriented Programming,Easy,What is a class in Python?,A class is a blueprint for creating objects that defines attributes and methods.
Object-Oriented Programming,Easy,How do you create an object from a class in Python?,Use the class name followed by parentheses and any necessary arguments: object_name = ClassName(arguments)
Object-Oriented Programming,Medium,What is the difference between an instance method and a class method in Python?,"An instance method is a method that can only be called on an instance of a class, while a class method is a method that can be called on the class itself."
Object-Oriented Programming,Medium,How do you define a subclass in Python?,Use the class keyword followed by the subclass name and the name of the parent class in parentheses: class Subclass(ParentClass):
Object-Oriented Programming,Hard,What is method resolution order (MRO) in Python?,Method resolution order is the order in which Python looks for methods to execute in a hierarchy of classes. It is determined by the C3 algorithm and can be accessed using the __mro__ attribute.
Exceptions,Easy,How do you handle an exception in Python?,Use a try-except block: try: # code that might raise an exception except ExceptionType: # code to handle the exception
Exceptions,Easy,How do you raise an exception in Python?,Use the raise keyword: raise ExceptionType('error message')
Exceptions,Medium,What is the difference between except and finally in a try-except-finally block in Python?,"except is used to catch specific exceptions, while finally is used to execute code regardless of whether an exception is raised or not."
Exceptions,Medium,How do you create a custom exception in Python?,Define a new class that inherits from the Exception class: class CustomException(Exception): pass
Classes and Objects,Easy,What is a class in Python?,A class is a blueprint or template for creating objects that defines a set of attributes and methods that the objects will have.
Classes and Objects,Easy,What is an object in Python?,"An object is an instance of a class, created using the class as a blueprint. It has its own set of attributes and methods, and can interact with other objects in the program."
Classes and Objects,Medium,How do you create a class in Python?,"Use the class keyword followed by the class name, with a colon to start the class definition."
Classes and Objects,Medium,How do you create an object from a class in Python?,"Call the class name as if it were a function, with any necessary arguments in parentheses. The result will be a new instance of the class, which can be assigned to a variable for further use."
Inheritance,Easy,What is inheritance in Python?,"Inheritance is the ability to create a new class that is a modified version of an existing class, inheriting its attributes and methods. This can save time and reduce code duplication in a program."
Inheritance,Easy,What is a superclass in Python?,"A superclass is a class that another class inherits from, providing the base set of attributes and methods that the new class can modify or extend."
Inheritance,Medium,How do you create a subclass in Python?,"Define a new class and include the name of the superclass in parentheses after the class name. Within the class definition, include any new attributes or methods as needed."
Inheritance,Medium,What is the difference between super() and __init__() in Python?,"super() is a built-in function that allows a subclass to call methods from its superclass, while __init__() is a special method that is called when a new instance of a class is created. It is used to set up the initial state of the object, and can take arguments as needed."
Polymorphism,Easy,What is polymorphism in Python?,"Polymorphism is the ability for different objects to respond to the same method call in different ways, based on their individual implementations of the method. This allows for greater flexibility and modularity in a program."
Polymorphism,Easy,What is method overriding in Python?,"Method overriding is when a subclass defines a method with the same name as a method in its superclass, effectively replacing the original method with a new implementation."
Polymorphism,Medium,What is method overloading in Python?,"Method overloading is when a class defines multiple methods with the same name but different numbers or types of arguments. Python does not support true method overloading, but it can be simulated using default argument values or variable-length argument lists."
Encapsulation,Easy,What is encapsulation in Python?,"Encapsulation is the practice of hiding the implementation details of a class from other parts of the program, so that they cannot be accidentally or maliciously modified. This is usually achieved using access modifiers like public, private, and protected."
Abstraction,Easy,What is abstraction in Python?,Abstraction is the process of simplifying complex systems by focusing on the essential details while ignoring the non-essential ones. It allows us to model real-world objects and concepts more accurately and efficiently in code.
Abstraction,Easy,What is an abstract class in Python?,"An abstract class is a class that cannot be instantiated on its own, but instead is designed to be subclassed by other classes. It may include abstract methods, which are methods that do not have an implementation in the abstract class, but must be implemented by any concrete subclasses."
Abstraction,Medium,What is an interface in Python?,"An interface is a collection of abstract methods that define a set of behaviors that a class can implement. It allows for greater modularity and flexibility in a program, since different classes can implement the same interface in different ways, but still be used interchangeably in certain contexts."
Design Patterns,Medium,What is the Singleton pattern in Python?,"The Singleton pattern is a design pattern that restricts the instantiation of a class to a single instance and provides a global point of access to that instance. It is commonly used for logging, configuration settings, and other cases where a single shared instance is necessary."
Design Patterns,Hard,What is the Observer pattern in Python?,"The Observer pattern is a design pattern that allows objects to subscribe to and receive updates from other objects when their state changes. It is commonly used for event-driven systems and user interfaces, where many objects need to respond to changes in a central object or system."
Design Patterns,Hard,What is the Factory pattern in Python?,"The Factory pattern is a design pattern that allows for the creation of objects without specifying their exact class. It is useful for cases where multiple related classes need to be created based on some input or configuration data, and allows for greater flexibility and modularity in a program."
Best Practices,Easy,What is the PEP 8 style guide for Python code?,"The PEP 8 style guide is a set of guidelines for writing clean, consistent, and easy-to-read Python code. It covers topics like naming conventions, whitespace, comments, and more, and is widely used by Python developers as a standard for high-quality code."
Best Practices,Medium,What is the DRY principle in Python programming?,"The DRY (Don't Repeat Yourself) principle is a programming principle that encourages the use of reusable code and the elimination of duplication in a program. It can help to reduce errors, increase modularity and flexibility, and make code easier to maintain and update over time."
Best Practices,Hard,What is the SOLID principle in Python programming?,"The SOLID principle is a set of five principles for object-oriented design that promote software quality and maintainability. The principles are Single Responsibility, Open-Closed, Liskov Substitution, Interface Segregation, and Dependency Inversion, and are widely used in modern software development."
Modules,Easy,How do you import a module in Python?,Use the import keyword followed by the module name: import module_name
Modules,Easy,How do you use a function from a module in Python?,Use the dot notation: module_name.function_name(arguments)
Modules,Medium,What is the difference between a local and global variable in Python?,"A local variable is defined inside a function and only exists within the function, while a global variable is defined outside of any function and can be accessed from anywhere in the program."
Modules,Medium,How do you create a module in Python?,Create a new file with a .py extension and define functions or variables in it.
Modules,Hard,What is the difference between a package and a module in Python?,"A module is a single file containing code and definitions, while a package is a collection of modules that are organized into a directory hierarchy."
Concurrency,Easy,What is threading in Python?,"Threading is a way to run multiple threads (or sub-tasks) within a single process. In Python, you can use the built-in threading module to create and manage threads, which allows for concurrency and can help to improve performance in certain cases."
Concurrency,Medium,What is the Global Interpreter Lock (GIL) in Python?,"The Global Interpreter Lock (GIL) is a mechanism in the CPython interpreter (which is the standard Python interpreter) that allows only one thread to execute Python bytecode at a time. This means that, in practice, only one thread can be executing Python code at any given time, even if multiple threads are running."
Concurrency,Hard,What is the asyncio module in Python?,"The asyncio module is a built-in module in Python 3.4 and later that provides infrastructure for writing asynchronous code using coroutines. It allows for concurrent and cooperative multitasking, and is commonly used for I/O-bound and network-bound applications."
Web Development,Easy,What is Flask in Python?,"Flask is a lightweight web framework for Python that allows you to easily create web applications and APIs. It provides tools for routing, templating, request handling, and more, and is a popular choice for small to medium-sized web projects."
Web Development,Medium,What is SQLAlchemy in Python?,"SQLAlchemy is a Python SQL toolkit and Object-Relational Mapping (ORM) library that provides a set of high-level API for connecting to databases, executing SQL queries, and mapping database tables to Python objects. It is a popular choice for working with databases in Python applications."
Flask,Easy,What is Flask?,Flask is a micro web framework written in Python. It is classified as a microframework because it does not require particular tools or libraries. It is used to build web applications quickly and easily using Python.
Flask,Easy,How do you install Flask in Python?,"You can install Flask in Python using pip, the Python package installer. Open a command prompt or terminal window and type pip install Flask. This will download and install Flask along with its dependencies."
Flask,Medium,What is a route in Flask?,"A route in Flask is a URL that a user can visit in their web browser to access a particular web page or function. In Flask, you define routes using a Python decorator (@app.route()) before a function definition. For example, @app.route('/hello') will define a route for the URL http://localhost:5000/hello. When a user visits this URL, the function that follows the decorator will be executed."
Flask,Medium,How do you render a template in Flask?,"You can render a template in Flask by using the render_template() function. First, you need to import the function by adding from flask import render_template to the top of your Python file. Then, within a function, you can call render_template() and pass the name of the template file as a string. For example, return render_template('index.html') will render the template file named index.html."
Flask,Hard,What is a Flask extension? Give an example of a Flask extension.,"A Flask extension is a third-party package that provides additional functionality for Flask. Extensions are typically installed using pip, and can be easily integrated into a Flask application. Examples of Flask extensions include Flask-Login, Flask-WTF, Flask-SQLAlchemy, Flask-Mail, and Flask-SocketIO. These extensions provide functionality for user authentication, form validation, database integration, email sending, and real-time communication, respectively. Extensions can be imported and initialized in a Flask application using Python code, typically in the create_app() function. For example, to use Flask-WTF in a Flask application, you would add from flask_wtf import CSRFProtect and csrf = CSRFProtect(app) to the create_app() function."
Django,Easy,What is Django?,"Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design. It follows the model-view-controller (MVC) architectural pattern and includes built-in features such as an object-relational mapper (ORM), a templ"
Django,Easy,How do you install Django in Python?,"You can install Django in Python using pip, the Python package installer. Open a command prompt or terminal window and type pip install Django. This will download and install Django along with its dependencies."
Django,Easy,What is a view in Django?,"In Django, a view is a Python function that takes a web request and returns a web response. It is responsible for processing user input, interacting with a database, and rendering a response. A view typically maps to a URL endpoint, and can be defined using a Python function or a class-based view. Views can also be decorated with Django's built-in decorators, such as @login_required or @csrf_exempt, to add additional functionality or security measures."
Django,Medium,What is the Django ORM?,"The Django ORM (Object-Relational Mapping) is a database abstraction layer that allows developers to interact with a database using Python objects instead of SQL. It maps Python classes to database tables, and Python objects to database rows. The Django ORM provides a high-level API for performing database operations, such as creating, reading, updating, and deleting records. It also includes advanced features such as lazy loading, transactions, and database migrations. The Django ORM supports multiple database backends, including SQLite, MySQL, PostgreSQL, and Oracle."
Django,Medium,What is a Django template?,"In Django, a template is a text file that defines the structure and content of a web page. It can include HTML, CSS, and JavaScript, as well as Django template language (DTL) tags and filters. DTL tags allow you to control the flow of the template and access dynamic data, while filters allow you to modify and format data. Templates can be inherited from a base template, which allows you to reuse common elements across multiple pages. In Django, templates are rendered by views using the render() function, which takes a template file and a context dictionary as arguments."
Django,Hard,What is a Django middleware? Give an example of a Django middleware.,"A Django middleware is a component that sits between the web server and the view, and performs additional processing on the request and response. Middleware can be used for a variety of purposes, such as authentication, caching, compression, and logging. In Django, middleware is defined as a Python class that implements one or more of the middleware methods, such as process_request(), process_response(), or process_exception(). An example of a Django middleware is django.middleware.csrf.CsrfViewMiddleware, which provides Cross-Site Request Forgery (CSRF) protection for forms. This middleware adds a CSRF token to every form rendered by a view, and verifies the token on form submission"
